@model IEnumerable<WebApplicationGrupp13.Models.FormalBlogPost>


@{
    ViewBag.Title = "Index";
}
@using WebApplicationGrupp13.Controllers
@using WebApplicationGrupp13.Models
@if (Request.IsAuthenticated) {
    <h2>Formell blogg</h2>
    <p>
        @Html.ActionLink("Skapa nytt blogginlägg", "Create")
    </p>
    var Model1 = Model.OrderByDescending(c => c.id);
    foreach (var item in Model1) {

        <div class="formalBlogPost">
            <div class="formalBlogPostContent">
                @{
                    var time = FormalBlogPostsController.GetDateFromDateTime(item.dateTime);
                }
                <h3>@Html.DisplayFor(modelItem => item.title)<span class="authorTime">@time</span></h3>
                <h6>@Html.DisplayFor(modelItem => item.category)</h6>
                <p>@Html.DisplayFor(modelItem => item.postText)</p>
                <br />
            </div>
            <div class="blogButtons">
                @if (item.fileName != null) {
                    <a href="~/FormalBlogPostUploads/@item.fileName" download>@item.fileName</a>
                }
                @if (item.creator.Equals(User.Identity.Name)) {

                    <p>
                        @Html.ActionLink("Se inlägg", "Details", new { id = item.id }) | @Html.ActionLink("Redigera", "Edit", new { id = item.id }) | @Html.ActionLink("Ta bort", "Delete", new { id = item.id })
                        <span class="authorTime">
                            @Html.DisplayFor(modelItem => item.creator)
                        </span>
                    </p>
                } else {
                    <p>
                        @Html.ActionLink("Se inlägg", "Details", new { id = item.id })
                    </p>
                }
                @{
                    FormalBlogPostCommentsController FormalBlogPostCommentControllerInstance = new FormalBlogPostCommentsController();
                }

            </div>

            @*@foreach (var comment in FormalBlogPostCommentControllerInstance.GetAllCommentsFromId(item.id)) {
                <div class="formalBlogPostComments">
                    <p> hasdasdasd</p>

                    <p>@comment.comment<span class="authorTime">@comment.author | @comment.dateTime</span></p>
                </div>

            }*@

        </div>
    }

    @*<script src="~/Scripts/jquery-3.4.1.js"></script>

                     <script>
                         var urlpath = '@Url.Action("CreateComment", "FormalBlogPostComments")';
                         var BlogPost = $(this).serialize();
                         var BlogPostId = @item.id;
                     </script>
                     <script type="text/javascript">

         $(function () {

             $('#btnStart').on('click', function () {
                 $.ajax({
                     type: 'POST',
                     url: '/FormalBlogPostCommentsController/CreateComment',
                     data: JSON.stringify({ comment: $('#txtValue').val(), id: '@item.id'}),
                     dataType: 'json',
                     contentType: 'application/json; charset=utf-8',

                 })

                 $.ajax({
                     type: 'POST',
                     url: urlpath,
                     data: JSON.stringify({ 'comment': $('#txtValue').val(), 'formalBlogPostId': BlogPostId }),
                     dataType: 'json',
                     contentType: 'application/json; charset=utf-8',

                 })
                 console.log($('#txtValue').val());

                 $('#txtValue').val('');
            });
        });
                     </script>
                     @Html.TextBox("txtValue", null, new { placeholder = "Input value" })
                     <input type="button" value="Start" id="btnStart" />*@



} else {
    <h1>Du måste logga in för att komma åt denna sida!</h1>
}



