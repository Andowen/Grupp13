@model IEnumerable<WebApplicationGrupp13.Models.EducationalPost>

@{
    ViewBag.Title = "Index";
}

@using WebApplicationGrupp13.Controllers
@if (Request.IsAuthenticated) {
    <h2>Utbildningsblogg</h2>
    if (User.IsInRole("Authorized") || User.IsInRole("Admin"))
    {
        <p>
            @Html.ActionLink("Skapa nytt inlägg", "Create")
        </p>
    }
    var Model1 = Model.OrderByDescending(c => c.id);
   EducationalBlogPostsController controller = new EducationalBlogPostsController();

    using (Html.BeginForm()) {
        <p>

            Filtrera efter kategori: @Html.DropDownList("SearchString", new SelectList(controller.GetCategories()), new { @id = "9999" })

            <input type="submit" value="Filtrera" class="btn btn-default" />
        </p>
    }

    foreach (var BlogPost in Model1) {

<div class="formalBlogPost">

    <div class="formalBlogPostContent">
        @{
            var time = FormalBlogPostsController.GetDateFromDateTime(BlogPost.dateTime);
            var imageSrc = FormalBlogPostsController.GetProfilePictureFromUsername(BlogPost.creator);
            var Name = FormalBlogPostsController.GetNameFromUsername(BlogPost.creator);
        }
        <h3>@Html.DisplayFor(modelItem => BlogPost.title)<span class="authorTime">@time</span></h3>
        <h4><span class="authorTime">@Name</span></h4>
        <p>@Html.DisplayFor(modelItem => BlogPost.category)</p>
        <div class="profile-thumbnail" style="float:right;">
            <span><img src="~/Image/@imageSrc" style="height:70px; width:auto;"></span>
        </div>
        <p style="white-space: pre-line">@Html.DisplayFor(modelItem => BlogPost.postText)</p>
        <br />
    </div>
    <div class="blogButtons">
        @if (BlogPost.fileName != null) {
            <a href="~/FormalBlogPostUploads/@BlogPost.fileName" download>@BlogPost.fileName</a>
        }
        @if (BlogPost.creator.Equals(User.Identity.Name)) {

            <p>
                @Html.ActionLink("Se inlägg", "Details", new { id = BlogPost.id }) | @Html.ActionLink("Redigera", "Edit", new { id = BlogPost.id }) | @Html.ActionLink("Ta bort", "Delete", new { id = BlogPost.id })
            </p>
        } else if (!BlogPost.creator.Equals(User.Identity.Name) && User.IsInRole("Admin")) {
            <p>
                @Html.ActionLink("Se inlägg", "Details", new { id = BlogPost.id }) | @Html.ActionLink("Ta bort", "Delete", new { id = BlogPost.id })
            </p>
        } else {
            <p>
                @Html.ActionLink("Se inlägg", "Details", new { id = BlogPost.id })
            </p>
        }
        @{
            EducationalBlogPostCommentsController commentsController = new EducationalBlogPostCommentsController();
        }


    </div>

    @foreach (var comment in commentsController.GetComments(BlogPost.id, "Educational")) {
        var commentTime = FormalBlogPostsController.GetDateFromDateTime(comment.dateTime);
        <div class="formalBlogPostComment" id="">


            <p>@comment.commentText</p>
            <p class="formalBlogPostCommentAuthor">@comment.author | @commentTime</p>
        </div>

    }

</div>

    }


} else {
<h1>Du måste logga in för att komma åt denna sida!</h1>
}
